#!/bin/bash

# Ruta al ejecutable barajar
PRUEBA_EXECUTABLE="../../prueba"

# Directorio de imágenes de entrada
INPUT_DIR="dataset"

# Directorio de imágenes de salida
OUTPUT_DIR="dataset_barajado"

# Crear directorios si no existen
if [ ! -d $INPUT_DIR ]; then
    mkdir -p $INPUT_DIR
    ./generaDataSet $INPUT_DIR
fi
mkdir -p $OUTPUT_DIR

# Obtener la lista de imágenes de entrada
INPUT_IMAGES=("$INPUT_DIR"/*)

# Borramos todo lo que pueda haber en el el output de test anteirores
rm $OUTPUT_DIR/*
# Iterar sobre las imágenes de entrada
for input_path in "${INPUT_IMAGES[@]}"; do
    # Obtener el nombre del archivo sin la ruta
    input_image=$(basename "$input_path")

    # Construir ruta de salida
    output_path="$OUTPUT_DIR/shuffled_$input_image"

    # Ejecutar el programa barajar
    $PRUEBA_EXECUTABLE "$input_path" "$output_path" >> datos.txt

    # Imprimir mensaje
    echo "Imagen $input_image barajada y guardada en $output_path"
done
# Ordeno de menor a mayor los pixeles
sort -n -k1,1 datos.txt > datos_ordenados.txt
rm datos.txt

# Representamos los datos
mkdir -p Graficas
gnuplot -persist <<EOF
set title "Gráfico de Dispersión con Ajuste Lineal"
set xlabel "Numero de pixeles"
set ylabel "Tiempo"
set key off

# Definir la función lineal
f(x) = a * x + b

# Configurar salida a un archivo PNG
set terminal png
set output "./Graficas/grafico_con_ajuste.png"

# Ajustar la función a los datos
fit f(x) "datos_ordenados.txt" using 1:2 via a, b

# Graficar los puntos de datos
plot "datos_ordenados.txt" with points pointtype 7 pointsize 1 title "", \
     f(x) lc rgb "blue" notitle
EOF

echo "Proceso completo."

